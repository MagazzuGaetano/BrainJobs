{"ast":null,"code":"import _objectSpread from \"/home/lfx/Downloads/BrainJobs/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lfx/Downloads/BrainJobs/frontend/src/pages/jobs/AddJobPage.js\";\nimport React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Input from '../../components/Form/Input/Input';\nimport Select from '../../components/Form/Select/Select';\nimport TextArea from '../../components/Form/TextArea/TextArea';\nimport Button from '../../components/Form/Button/Button';\nimport Notification from '../../components/Notification/Notification';\nimport Context from '../../context/Context';\n\nclass AddJobPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      languages: ['python', 'java', 'scala', 'r', 'c++', 'julia'],\n      frameworks: ['none', 'pytorch', 'tensorflow', 'caffe', 'keras', 'deeplearning4j', 'apache_mahout', 'apache_singa'],\n      dataset_datatypes: ['csv', 'avro', 'json'],\n      fields: {\n        title: '',\n        language: 'python',\n        framework: 'none',\n        dataset: '',\n        dataset_datatype: 'csv',\n        model: ''\n      },\n      error: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  checkIfValid(value) {\n    return value !== undefined && value !== null && value !== \"\";\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const fields = this.state.fields;\n    const title = fields.title,\n          language = fields.language,\n          dataset = fields.dataset,\n          dataset_datatype = fields.dataset_datatype,\n          model = fields.model;\n\n    if (this.checkIfValid(title) && this.checkIfValid(language) && this.checkIfValid(dataset) && this.checkIfValid(dataset_datatype) && this.checkIfValid(model)) {\n      if (fields.framework === \"none\") delete fields.framework;\n      const options = {\n        method: 'post',\n        body: JSON.stringify(fields),\n        headers: {\n          'Authorization': 'Bearer ' + this.context.token,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      const url = this.context.API_URL + '/jobs';\n      fetch(url, options).then(data => data.json()).then(data => {\n        if (!data.message) this.props.history.push(\"/\");else this.setState({\n          error: data.message\n        });\n      }).catch(err => console.log(err));\n    }\n  }\n\n  handleChange(e) {\n    const fields = this.state.fields;\n    this.setState({\n      fields: _objectSpread({}, fields, {\n        [e.target.name]: e.target.value\n      })\n    });\n  }\n\n  render() {\n    if (!this.context.token) return React.createElement(Redirect, {\n      from: \"/jobs/add\",\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    });\n    const _this$state$fields = this.state.fields,\n          title = _this$state$fields.title,\n          language = _this$state$fields.language,\n          framework = _this$state$fields.framework,\n          dataset = _this$state$fields.dataset,\n          dataset_datatype = _this$state$fields.dataset_datatype,\n          model = _this$state$fields.model;\n    const _this$state = this.state,\n          languages = _this$state.languages,\n          frameworks = _this$state.frameworks,\n          dataset_datatypes = _this$state.dataset_datatypes,\n          error = _this$state.error;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, error && React.createElement(Notification, {\n      message: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"title is-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Training Request\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: 'text',\n      title: 'Title',\n      name: 'title',\n      value: title,\n      placeholder: 'Enter the title',\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Select, {\n      title: 'Language',\n      name: 'language',\n      options: languages,\n      value: language,\n      placeholder: 'Select a Language',\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Select, {\n      title: 'Framework',\n      name: 'framework',\n      options: frameworks,\n      value: framework,\n      placeholder: 'Select a Framework',\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      title: 'Dataset',\n      name: 'dataset',\n      value: dataset,\n      placeholder: 'Enter the dataset here!',\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Select, {\n      title: 'Dataset Datatype',\n      name: 'dataset_datatype',\n      options: dataset_datatypes,\n      value: dataset_datatype,\n      placeholder: 'Select a DataSet DataType',\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      title: 'Model',\n      name: 'model',\n      value: model,\n      placeholder: 'Enter the model here!',\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"field is-grouped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: 'button is-primary is-outlined',\n      title: 'Submit',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      className: \"button is-danger is-outlined\",\n      to: \"/jobs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nAddJobPage.contextType = Context;\nexport default AddJobPage;","map":{"version":3,"sources":["/home/lfx/Downloads/BrainJobs/frontend/src/pages/jobs/AddJobPage.js"],"names":["React","NavLink","Redirect","Input","Select","TextArea","Button","Notification","Context","AddJobPage","Component","constructor","props","state","languages","frameworks","dataset_datatypes","fields","title","language","framework","dataset","dataset_datatype","model","error","handleSubmit","bind","handleChange","checkIfValid","value","undefined","e","preventDefault","options","method","body","JSON","stringify","headers","context","token","url","API_URL","fetch","then","data","json","message","history","push","setState","catch","err","console","log","target","name","render","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'\n\nimport Input from '../../components/Form/Input/Input'\nimport Select from '../../components/Form/Select/Select'\nimport TextArea from '../../components/Form/TextArea/TextArea'\nimport Button from '../../components/Form/Button/Button'\nimport Notification from '../../components/Notification/Notification'\n\nimport Context from '../../context/Context'\n\n\nclass AddJobPage extends React.Component {\n\n  static contextType = Context\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      languages: ['python', 'java', 'scala', 'r', 'c++', 'julia'],\n      frameworks: [\n        'none',\n        'pytorch',\n        'tensorflow',\n        'caffe',\n        'keras',\n        'deeplearning4j',\n        'apache_mahout',\n        'apache_singa'\n      ],\n      dataset_datatypes: ['csv', 'avro', 'json'],\n      fields: {\n        title: '',\n        language: 'python',\n        framework: 'none',\n        dataset: '',\n        dataset_datatype: 'csv',\n        model: ''\n      },\n      error: null\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  checkIfValid(value) {\n    return (\n      value !== undefined &&\n      value !== null &&\n      value !== \"\"\n    )\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n\n    const { fields } = this.state\n    const { title,\n            language,\n            dataset,\n            dataset_datatype,\n            model } = fields\n\n    if (this.checkIfValid(title) &&\n        this.checkIfValid(language) &&\n        this.checkIfValid(dataset) &&\n        this.checkIfValid(dataset_datatype) &&\n        this.checkIfValid(model)) {\n\n    if (fields.framework === \"none\")\n        delete fields.framework\n\n    const options = {\n      method: 'post',\n      body: JSON.stringify(fields),\n      headers: {\n        'Authorization': 'Bearer ' + this.context.token,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const url = this.context.API_URL + '/jobs'\n    fetch(url, options)\n      .then(data => data.json())\n      .then(data => {\n        if(!data.message)\n          this.props.history.push(\"/\")\n        else\n          this.setState({error: data.message})\n      })\n      .catch(err => console.log(err))\n    }\n  }\n\n  handleChange(e) {\n    const { fields } = this.state\n    this.setState({\n      fields: {...fields, [e.target.name] : e.target.value}\n    })\n  }\n\n  render() {\n    if (!this.context.token) return <Redirect from=\"/jobs/add\" to=\"/login\" />\n\n    const {\n      title,\n      language,\n      framework,\n      dataset,\n      dataset_datatype,\n      model\n    } = this.state.fields\n\n    const { languages, frameworks, dataset_datatypes, error } = this.state\n\n    return (\n      <div className=\"container\">\n        <div className=\"box\">\n          {error && <Notification message={error} />}\n          <h2 className=\"title is-3\">Training Request</h2>\n          <form onSubmit={this.handleSubmit}>\n            <Input \n              type={'text'}\n              title={'Title'} \n              name={'title'}\n              value={title}\n              placeholder={'Enter the title'}\n              handleChange={this.handleChange}\n              required={true}\n            />\n            <Select \n              title={'Language'}\n              name={'language'}\n              options={languages} \n              value={language}\n              placeholder={'Select a Language'}\n              handleChange={this.handleChange}\n            />\n            <Select \n              title={'Framework'}\n              name={'framework'}\n              options={frameworks} \n              value={framework}\n              placeholder={'Select a Framework'}\n              handleChange={this.handleChange}\n            />\n            <TextArea \n              title={'Dataset'}\n              name={'dataset'}\n              value={dataset}\n              placeholder={'Enter the dataset here!'}\n              handleChange={this.handleChange}\n              required={true}\n            />\n            <Select \n              title={'Dataset Datatype'}\n              name={'dataset_datatype'}\n              options={dataset_datatypes} \n              value={dataset_datatype}\n              placeholder={'Select a DataSet DataType'}\n              handleChange={this.handleChange}\n            />\n            <TextArea \n              title={'Model'}\n              name={'model'}\n              value={model}\n              placeholder={'Enter the model here!'}\n              handleChange={this.handleChange}\n              required={true}\n            />\n            <br/>\n            <div className=\"field is-grouped\">\n              <Button \n                className={'button is-primary is-outlined'} \n                title={'Submit'} \n              />\n              <NavLink \n                className=\"button is-danger is-outlined\" \n                to=\"/jobs\"\n              >\n                Cancel\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddJobPage"]},"metadata":{},"sourceType":"module"}