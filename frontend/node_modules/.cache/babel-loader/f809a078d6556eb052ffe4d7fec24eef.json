{"ast":null,"code":"import _objectSpread from \"/home/lfx/Downloads/BrainJobs/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lfx/Downloads/BrainJobs/frontend/src/pages/auth/RegisterPage.js\";\nimport React from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Form/Button/Button';\nimport Notification from '../../components/Notification/Notification';\nimport Context from '../../context/Context';\nimport './auth.css';\n\nclass RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        username: '',\n        email: '',\n        password: '',\n        confirm: ''\n      },\n      error: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  checkIfValid(value) {\n    return value !== undefined && value !== null && value !== \"\";\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const _this$state$fields = this.state.fields,\n          username = _this$state$fields.username,\n          email = _this$state$fields.email,\n          password = _this$state$fields.password,\n          confirm = _this$state$fields.confirm;\n    if (password !== confirm) this.setState({\n      error: \"password doesn't match!\"\n    });\n\n    if (this.checkIfValid(username) && this.checkIfValid(email) && this.checkIfValid(password) && password === confirm) {\n      const options = {\n        method: 'post',\n        body: JSON.stringify({\n          username,\n          email,\n          password\n        }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      const url = this.context.API_URL + '/auth/register';\n      fetch(url, options).then(data => data.json()).then(data => {\n        if (!data.message) this.props.history.push(\"/\");else this.setState({\n          error: data.message\n        });\n      }).catch(err => console.log(err));\n    }\n  }\n\n  handleChange(e) {\n    const fields = this.state.fields;\n    this.setState({\n      fields: _objectSpread({}, fields, {\n        [e.target.name]: e.target.value\n      })\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          fields = _this$state.fields,\n          error = _this$state.error;\n    const username = fields.username,\n          email = fields.email,\n          password = fields.password,\n          confirm = fields.confirm;\n    if (this.context.token) return React.createElement(Redirect, {\n      from: \"/register\",\n      to: \"/jobs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      id: \"auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, error && React.createElement(Notification, {\n      message: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title is-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Input, {\n      type: 'text',\n      title: 'Username',\n      name: 'username',\n      value: username,\n      placeholder: 'Enter your username',\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: 'email',\n      title: 'Email',\n      name: 'email',\n      value: email,\n      placeholder: 'Enter your email',\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: 'password',\n      title: 'Password',\n      name: 'password',\n      value: password,\n      placeholder: 'Enter your password',\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: 'password',\n      title: 'Confirm Password',\n      name: 'confirm',\n      value: confirm,\n      placeholder: 'Confirm your password',\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"field is-grouped is-pulled-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button is-success\",\n      title: 'Register',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/login\",\n      className: \"button is-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nRegisterPage.contextType = Context;\nexport default RegisterPage;","map":{"version":3,"sources":["/home/lfx/Downloads/BrainJobs/frontend/src/pages/auth/RegisterPage.js"],"names":["React","NavLink","Redirect","Input","Button","Notification","Context","RegisterPage","Component","constructor","props","state","fields","username","email","password","confirm","error","handleSubmit","bind","handleChange","checkIfValid","value","undefined","e","preventDefault","setState","options","method","body","JSON","stringify","headers","url","context","API_URL","fetch","then","data","json","message","history","push","catch","err","console","log","target","name","render","token","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'\n\nimport Input from '../../components/Form/Input/Input'\nimport Button from '../../components/Form/Button/Button'\nimport Notification from '../../components/Notification/Notification'\n\nimport Context from '../../context/Context'\n\nimport './auth.css'\n\n\nclass RegisterPage extends React.Component {\n\n  static contextType = Context\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      fields: {\n        username: '',\n        email: '',\n        password: '',\n        confirm: ''\n      },\n      error: null\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  checkIfValid(value) {\n    return (\n      value !== undefined &&\n      value !== null &&\n      value !== \"\"\n    )\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n\n    const { username, email, password, confirm } = this.state.fields\n\n    if (password !== confirm) this.setState({error: \"password doesn't match!\"})\n\n    if (this.checkIfValid(username) &&\n        this.checkIfValid(email) &&\n        this.checkIfValid(password) &&\n        password === confirm) {\n\n      const options = {\n        method: 'post',\n        body: JSON.stringify({ username, email, password }),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n\n      const url = this.context.API_URL + '/auth/register'\n      fetch(url, options)\n        .then(data => data.json())\n        .then(data => {\n          if (!data.message)\n            this.props.history.push(\"/\")\n          else\n            this.setState({error: data.message})\n        })\n        .catch(err => console.log(err))\n\n    }\n  }\n\n  handleChange(e) {\n    const { fields } = this.state\n    this.setState({\n      fields: { ...fields, [e.target.name]: e.target.value }\n    })\n  }\n\n  render() {\n    const { fields, error } = this.state\n    const { username, email, password, confirm } = fields\n\n    if (this.context.token) return <Redirect from=\"/register\" to=\"/jobs\" />\n\n    return (\n      <div id=\"auth\">\n        <div className=\"box\">\n          {error && <Notification message={error} />}\n          <form onSubmit={this.handleSubmit}>\n            <h2 className=\"title is-3\">Register</h2>\n            <Input \n              type={'text'}\n              title={'Username'}\n              name={'username'}\n              value={username}\n              placeholder={'Enter your username'}\n              handleChange={this.handleChange}\n              required={true}\n            />\n            <Input \n              type={'email'}\n              title={'Email'}\n              name={'email'}\n              value={email}\n              placeholder={'Enter your email'}\n              handleChange={this.handleChange}\n              required={true}\n            />\n            <Input \n              type={'password'}\n              title={'Password'}\n              name={'password'}\n              value={password}\n              placeholder={'Enter your password'}\n              handleChange={this.handleChange}\n              required={true}\n            />\n            <Input \n              type={'password'}\n              title={'Confirm Password'}\n              name={'confirm'}\n              value={confirm}\n              placeholder={'Confirm your password'}\n              handleChange={this.handleChange}\n              required={true}\n            />\n            <div className=\"field is-grouped is-pulled-right\">\n              <Button className=\"button is-success\" \n                      title={'Register'} />\n\n              <NavLink to=\"/login\" className=\"button is-link\">\n                Login\n              </NavLink>\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RegisterPage"]},"metadata":{},"sourceType":"module"}