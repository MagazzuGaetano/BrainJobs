{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar BareHighlight =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inheritsLoose(BareHighlight, _PureComponent);\n\n  function BareHighlight() {\n    var _temp, _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_temp = _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this, _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      highlightedCode: null,\n      language: null\n    }), _temp) || _assertThisInitialized(_this);\n  }\n\n  var _proto = BareHighlight.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.highlightCode();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If the text changed make sure to reset the state\n    // This way we ensure that the new text is immediately displayed.\n    if (prevProps.children !== this.props.children) {\n      this.setState({\n        highlightedCode: null,\n        language: null\n      });\n      return;\n    } // Do not call highlight.js if we already have highlighted code\n    // If the children changed highlightedCode will be null\n\n\n    if (this.state.highlightedCode) return;\n    this.highlightCode();\n  };\n\n  _proto.getInitialCode = function getInitialCode() {\n    var type = typeof this.props.children;\n\n    if (type !== 'string') {\n      throw new Error(\"Children of <Highlight> must be a string. '\" + type + \"' supplied\");\n    }\n\n    return this.props.children;\n  };\n\n  _proto.getHighlightPromise = function getHighlightPromise() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        highlightjs = _this$props.highlightjs,\n        languages = _this$props.languages;\n    return new Promise(function (resolve) {\n      if (languages && languages.length === 1) {\n        resolve(highlightjs.highlight(languages[0], _this2.getInitialCode()));\n      } else {\n        resolve(highlightjs.highlightAuto(_this2.getInitialCode(), languages));\n      }\n    });\n  };\n\n  _proto.highlightCode = function highlightCode() {\n    var _this3 = this;\n\n    var _this$props2 = this.props,\n        languages = _this$props2.languages,\n        worker = _this$props2.worker;\n\n    if (worker) {\n      worker.onmessage = function (event) {\n        return _this3.setState({\n          highlightedCode: event.data.value,\n          language: event.data.language\n        });\n      };\n\n      worker.postMessage({\n        code: this.getInitialCode(),\n        languages: languages\n      });\n    } else {\n      this.getHighlightPromise().then(function (result) {\n        return _this3.setState({\n          highlightedCode: result.value,\n          language: result.language\n        });\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var code = this.state.highlightedCode;\n    var classes = (0, _classnames.default)(this.props.className, 'hljs', this.state.language);\n\n    if (code) {\n      return _react.default.createElement(\"pre\", null, _react.default.createElement(\"code\", {\n        className: classes,\n        dangerouslySetInnerHTML: {\n          __html: code\n        }\n      }));\n    }\n\n    return _react.default.createElement(\"pre\", null, _react.default.createElement(\"code\", {\n      className: classes\n    }, this.getInitialCode()));\n  };\n\n  return BareHighlight;\n}(_react.PureComponent);\n\nexports.default = BareHighlight;\n\n_defineProperty(BareHighlight, \"defaultProps\", {\n  className: '',\n  languages: [],\n  worker: null\n});\n\nprocess.env.NODE_ENV !== \"production\" ? BareHighlight.propTypes = {\n  children: _propTypes.default.string.isRequired,\n  className: _propTypes.default.string,\n  highlightjs: _propTypes.default.object.isRequired,\n  // eslint-disable-line react/forbid-prop-types\n  languages: _propTypes.default.arrayOf(_propTypes.default.string),\n  worker: _propTypes.default.object // eslint-disable-line react/forbid-prop-types\n\n} : void 0;","map":null,"metadata":{},"sourceType":"script"}